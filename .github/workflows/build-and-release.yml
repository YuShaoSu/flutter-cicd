# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: actions/setup-node@v1
        with:
          node-version: '12'
      - name: Install Firebase emulator
        run: |
          npm install -g firebase-tools
          firebase emulators:start
      
      - name: Flutter action
      # You may pin to the exact commit or the version.
      # uses: subosito/flutter-action@4389e6cbc6cb8a4b18c628ff96ff90be0e926aa8
        uses: subosito/flutter-action@v1.5.3
        with:
          # The Flutter version to make available on the path
          # flutter-version: # optional
          # The Flutter build release channel
          channel: dev # optional, default is stable
      

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

      - run: flutter pub get
      - run: flutter test
      - run: flutter build apk
      - run: flutter build ios --release --no-codesign

      - name: Save built app
        run: |
          mkdir -p dist/ios
          mkdir -p dist/android
          mv build/ios/iphoneos/Runner.app dist/ios
          mv build/app/outputs/flutter-apk/app-release.apk dist/android
          cd dist
          zip -r ios.zip ios
          zip -r android.zip android

      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: |
            dist
          retention-days: 10
